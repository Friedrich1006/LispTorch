(define circle-area (lambda (r) (* pi (* r r))))
(circle-area 3)
(define fact (lambda (n) (if (<= n 1) 1 (* n (fact (- n 1))))))
(fact 100)
(define twice (lambda (x) (* 2 x)))
(define repeat (lambda (f) (lambda (x) (f (f x)))))
((repeat (repeat (repeat (repeat twice)))) 10)
(define fib (lambda (n) (if (< n 2) 1 (+ (fib (- n 1)) (fib (- n 2))))))
(define range (lambda (a b) (if (= a b) (quote ()) (cons a (range (+ a 1) b)))))
(define abc (lambda (x) (let ((c 4) (b 2)) (+ c b))))